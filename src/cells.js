//@ sourceMappingURL=cells.map
// Generated by CoffeeScript 1.6.1
(function() {
  var cell, cellName, cells, colorArrayFromStrings, getBumpMessage, mirrorBumps;

  mirrorBumps = "You can't see yourself go on forever, because no matter how you stand, your head gets in the way.";

  cells = {
    floor: {
      char: 'Â·',
      reflectivity: 0.3,
      lightPasses: true,
      blocksMovement: false
    },
    plywood: {
      reflectivity: 0.1,
      char: '#',
      bg: ['#965922', '#a66a22', '#8b4a14', '#af6e2a'],
      fg: '#2d0a04',
      bump: 'The plywood is firm and unyielding.'
    },
    rightmirror: {
      reflectivity: 0.1,
      char: '|',
      bump: mirrorBumps
    },
    leftmirror: {
      reflectivity: 0.1,
      char: '|',
      bump: mirrorBumps
    },
    upmirror: {
      reflectivity: 0.1,
      char: '-',
      bump: mirrorBumps
    },
    downmirror: {
      reflectivity: 0.1,
      char: '-',
      bump: mirrorBumps
    }
  };

  colorArrayFromStrings = function(a) {
    var c, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = a.length; _i < _len; _i++) {
      c = a[_i];
      _results.push(ROT.Color.fromString(c));
    }
    return _results;
  };

  for (cellName in cells) {
    cell = cells[cellName];
    cell.name = cellName;
    if (cell.bg != null) {
      cell.bg = colorArrayFromStrings(cell.bg);
    }
    if (cell.fg != null) {
      if (typeof cell.fg === 'string') {
        cell.fg = [cell.fg];
      }
      cell.fg = colorArrayFromStrings(cell.fg);
    }
  }

  console.log(cells);

  getBumpMessage = function(cell) {
    var bumps, msg, msgs;
    bumps = cell.bump;
    if (bumps == null) {
      return;
    }
    if (typeof bumps === 'string') {
      msgs = (function() {
        var _i, _len, _ref, _results;
        _ref = bumps.split('\n');
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          msg = _ref[_i];
          _results.push(msg.trim());
        }
        return _results;
      })();
      msgs = ((function() {
        var _i, _len, _results;
        if (msg.length > 0) {
          _results = [];
          for (_i = 0, _len = msgs.length; _i < _len; _i++) {
            msg = msgs[_i];
            _results.push(msg);
          }
          return _results;
        }
      })());
      cell.bump = msgs;
      bumps = cell.bump;
    }
    assert(typeof bumps === 'object' && bumps.length);
    return bumps.random();
  };

  window.cells = cells;

  window.getBumpMessage = getBumpMessage;

}).call(this);
